/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    bunBottom: THREE.Mesh
    bunBottom_1: THREE.Mesh
    bunTop: THREE.Mesh
    cheese: THREE.Mesh
    cheese_1: THREE.Mesh
    patty: THREE.Mesh
    patty_1: THREE.Mesh
    salad: THREE.Mesh
    salad_1: THREE.Mesh
    Mesh_tomato: THREE.Mesh
    Mesh_tomato_1: THREE.Mesh
  }
  materials: {
    brownLight: THREE.MeshStandardMaterial
    yellow: THREE.MeshStandardMaterial
    brownDark: THREE.MeshStandardMaterial
    green: THREE.MeshStandardMaterial
    _defaultMat: THREE.MeshStandardMaterial
    red: THREE.MeshStandardMaterial
  }
}

export function BurgerDouble({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/models/kenney-foods/burgerDouble.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.bunBottom.geometry}
        material={nodes.bunBottom.material}
        scale={[1, 0.8, 1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.bunBottom_1.geometry}
        material={nodes.bunBottom_1.material}
        position={[0, 0.13, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.bunTop.geometry}
        material={nodes.bunTop.material}
        position={[0, 0.24, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.cheese.geometry}
        material={nodes.cheese.material}
        position={[0, 0.07, 0]}
        scale={[2.79, 0.8, 1.43]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.cheese_1.geometry}
        material={nodes.cheese_1.material}
        position={[0, 0.21, 0]}
        scale={[2.79, 0.8, 1.43]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.patty.geometry}
        material={nodes.patty.material}
        position={[0, 0.06, 0]}
        scale={[1, 0.91, 1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.patty_1.geometry}
        material={nodes.patty_1.material}
        position={[0, 0.19, 0]}
        scale={[1, 0.91, 1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.salad.geometry}
        material={nodes.salad.material}
        position={[0, 0.04, 0]}
        scale={[0.92, 0.75, 0.92]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.salad_1.geometry}
        material={nodes.salad_1.material}
        position={[0, 0.17, 0]}
        scale={[0.92, 0.6, 0.92]}
      />
      <group position={[0, 0.11, 0]} scale={[1.56, 0.56, 1.56]}>
        <mesh castShadow receiveShadow geometry={nodes.Mesh_tomato.geometry} material={materials._defaultMat} />
        <mesh castShadow receiveShadow geometry={nodes.Mesh_tomato_1.geometry} material={materials.red} />
      </group>
    </group>
  )
}

useGLTF.preload('/models/kenney-foods/burgerDouble.glb')
