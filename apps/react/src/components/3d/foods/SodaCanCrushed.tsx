/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Mesh_sodaCanCrushed: THREE.Mesh
    Mesh_sodaCanCrushed_1: THREE.Mesh
    Mesh_sodaCanCrushed_2: THREE.Mesh
    Mesh_sodaCanCrushed_3: THREE.Mesh
  }
  materials: {
    greyDark: THREE.MeshStandardMaterial
    greyLight: THREE.MeshStandardMaterial
    brownDarkest: THREE.MeshStandardMaterial
    red: THREE.MeshStandardMaterial
  }
}

export function SodaCanCrushed({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/models/kenney-foods/sodaCanCrushed.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI, 0, -Math.PI]}>
        <mesh castShadow receiveShadow geometry={nodes.Mesh_sodaCanCrushed.geometry} material={materials.greyDark} />
        <mesh castShadow receiveShadow geometry={nodes.Mesh_sodaCanCrushed_1.geometry} material={materials.greyLight} />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh_sodaCanCrushed_2.geometry}
          material={materials.brownDarkest}
        />
        <mesh castShadow receiveShadow geometry={nodes.Mesh_sodaCanCrushed_3.geometry} material={materials.red} />
      </group>
    </group>
  )
}

useGLTF.preload('/models/kenney-foods/sodaCanCrushed.glb')
