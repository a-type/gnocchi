/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    frikandelSpeciaal: THREE.Mesh
    frikandel: THREE.Mesh
    Mesh_sauceOnions: THREE.Mesh
    Mesh_sauceOnions_1: THREE.Mesh
    Mesh_sauceOnions_2: THREE.Mesh
  }
  materials: {
    white: THREE.MeshStandardMaterial
    brownDark: THREE.MeshStandardMaterial
    _defaultMat: THREE.MeshStandardMaterial
    brownLight: THREE.MeshStandardMaterial
    red: THREE.MeshStandardMaterial
  }
}

export function FrikandelSpeciaal({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/models/kenney-foods/frikandelSpeciaal.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.frikandelSpeciaal.geometry}
        material={materials.white}
        scale={[0.99, 1, 0.5]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.frikandel.geometry}
          material={materials.brownDark}
          position={[0.15, 0.05, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          scale={[1.42, 0.72, 0.71]}
        />
        <group position={[-0.25, 0.09, 0.04]} scale={[1.01, 1, 2]}>
          <mesh castShadow receiveShadow geometry={nodes.Mesh_sauceOnions.geometry} material={materials._defaultMat} />
          <mesh castShadow receiveShadow geometry={nodes.Mesh_sauceOnions_1.geometry} material={materials.brownLight} />
          <mesh castShadow receiveShadow geometry={nodes.Mesh_sauceOnions_2.geometry} material={materials.red} />
        </group>
      </mesh>
    </group>
  )
}

useGLTF.preload('/models/kenney-foods/frikandelSpeciaal.glb')
