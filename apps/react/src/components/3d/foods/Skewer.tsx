/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    skewer: THREE.Mesh
    meat: THREE.Mesh
    meat_1: THREE.Mesh
    meat_2: THREE.Mesh
  }
  materials: {
    brownLight: THREE.MeshStandardMaterial
    brownDark: THREE.MeshStandardMaterial
  }
}

export function Skewer({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/models/kenney-foods/skewer.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh castShadow receiveShadow geometry={nodes.skewer.geometry} material={materials.brownLight}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.meat.geometry}
          material={nodes.meat.material}
          position={[0.08, 0, 0]}
          rotation={[0, -Math.PI / 2, 0]}
          scale={[1.29, 1.29, 1.65]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.meat_1.geometry}
          material={nodes.meat_1.material}
          position={[0.22, 0, 0]}
          rotation={[0, -Math.PI / 2, 0]}
          scale={[1.29, 1.29, 1.65]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.meat_2.geometry}
          material={nodes.meat_2.material}
          position={[-0.05, 0, 0]}
          rotation={[0, -Math.PI / 2, 0]}
          scale={[1.29, 1.29, 1.65]}
        />
      </mesh>
    </group>
  )
}

useGLTF.preload('/models/kenney-foods/skewer.glb')
