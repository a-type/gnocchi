/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Mesh_sundae: THREE.Mesh
    Mesh_sundae_1: THREE.Mesh
    Mesh_sundae_2: THREE.Mesh
    Mesh_cherry: THREE.Mesh
    Mesh_cherry_1: THREE.Mesh
    straw: THREE.Mesh
  }
  materials: {
    _defaultMat: THREE.MeshStandardMaterial
    purpleLight: THREE.MeshStandardMaterial
    brownDark: THREE.MeshStandardMaterial
    red: THREE.MeshStandardMaterial
    green: THREE.MeshStandardMaterial
  }
}

export function Sundae({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/models/kenney-foods/sundae.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh castShadow receiveShadow geometry={nodes.Mesh_sundae.geometry} material={materials._defaultMat} />
      <mesh castShadow receiveShadow geometry={nodes.Mesh_sundae_1.geometry} material={materials.purpleLight} />
      <mesh castShadow receiveShadow geometry={nodes.Mesh_sundae_2.geometry} material={materials.brownDark} />
      <group position={[-0.05, 0.54, 0.04]} rotation={[Math.PI / 6, 0, 0]} scale={0.62}>
        <mesh castShadow receiveShadow geometry={nodes.Mesh_cherry.geometry} material={materials.red} />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh_cherry_1.geometry}
          material={nodes.Mesh_cherry_1.material}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.straw.geometry}
        material={nodes.straw.material}
        position={[-0.02, 0.56, -0.03]}
        rotation={[-0.26, 0, 0]}
        scale={[0.43, 0.58, 0.43]}
      />
    </group>
  )
}

useGLTF.preload('/models/kenney-foods/sundae.glb')
