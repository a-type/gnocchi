/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    hotDog: THREE.Mesh
    Mesh_sauce: THREE.Mesh
    Mesh_sauce_1: THREE.Mesh
    sausage: THREE.Mesh
  }
  materials: {
    brownLight: THREE.MeshStandardMaterial
    yellow: THREE.MeshStandardMaterial
    red: THREE.MeshStandardMaterial
    brown: THREE.MeshStandardMaterial
  }
}

export function HotDog({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/models/kenney-foods/hotDog.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh castShadow receiveShadow geometry={nodes.hotDog.geometry} material={materials.brownLight}>
        <group position={[0, 0.14, 0]} rotation={[Math.PI, 0, -Math.PI]}>
          <mesh castShadow receiveShadow geometry={nodes.Mesh_sauce.geometry} material={materials.yellow} />
          <mesh castShadow receiveShadow geometry={nodes.Mesh_sauce_1.geometry} material={materials.red} />
        </group>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.sausage.geometry}
          material={materials.brown}
          position={[-0.29, 0.09, 0]}
          rotation={[Math.PI / 2, 0, -Math.PI / 2]}
          scale={0.93}
        />
      </mesh>
    </group>
  )
}

useGLTF.preload('/models/kenney-foods/hotDog.glb')
