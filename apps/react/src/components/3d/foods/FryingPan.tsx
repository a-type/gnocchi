/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
// @ts-ignore
import { GLTF } from 'three-stdlib';
import { brown, metal } from '../materials.js';

type GLTFResult = GLTF & {
	nodes: {
		Mesh_fryingPan: THREE.Mesh;
		Mesh_fryingPan_1: THREE.Mesh;
	};
	materials: {
		greyDark: THREE.MeshStandardMaterial;
		brown: THREE.MeshStandardMaterial;
	};
};

export function FryingPan({ ...props }: JSX.IntrinsicElements['group']) {
	const group = useRef<THREE.Group>(null);
	const { nodes, materials } = useGLTF(
		'/models/kenney-foods/smoothed/fryingPan.glb',
	) as GLTFResult;
	return (
		<group ref={group} {...props} dispose={null}>
			<group rotation={[0, Math.PI / 2, 0]}>
				<mesh
					castShadow
					receiveShadow
					geometry={nodes.Mesh_fryingPan.geometry}
					material={metal}
				/>
				<mesh
					castShadow
					receiveShadow
					geometry={nodes.Mesh_fryingPan_1.geometry}
					material={brown}
				/>
			</group>
		</group>
	);
}

useGLTF.preload('/models/kenney-foods/smoothed/fryingPan.glb');
