/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Mesh_cupcake: THREE.Mesh
    Mesh_cupcake_1: THREE.Mesh
    Mesh_cake: THREE.Mesh
    Mesh_cake_1: THREE.Mesh
    Mesh_cherry: THREE.Mesh
    Mesh_cherry_1: THREE.Mesh
  }
  materials: {
    _defaultMat: THREE.MeshStandardMaterial
    purpleLight: THREE.MeshStandardMaterial
    brownDark: THREE.MeshStandardMaterial
    brown: THREE.MeshStandardMaterial
    red: THREE.MeshStandardMaterial
    green: THREE.MeshStandardMaterial
  }
}

export function Cupcake({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/models/kenney-foods/cupcake.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <group scale={0.94}>
        <mesh castShadow receiveShadow geometry={nodes.Mesh_cupcake.geometry} material={materials._defaultMat} />
        <mesh castShadow receiveShadow geometry={nodes.Mesh_cupcake_1.geometry} material={materials.purpleLight} />
        <group position={[0, 0.19, 0]} scale={1.06}>
          <mesh castShadow receiveShadow geometry={nodes.Mesh_cake.geometry} material={materials.brownDark} />
          <mesh castShadow receiveShadow geometry={nodes.Mesh_cake_1.geometry} material={materials.brown} />
        </group>
        <group position={[0, 0.33, 0]} scale={0.77}>
          <mesh castShadow receiveShadow geometry={nodes.Mesh_cherry.geometry} material={materials.red} />
          <mesh castShadow receiveShadow geometry={nodes.Mesh_cherry_1.geometry} material={materials.green} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/kenney-foods/cupcake.glb')
