/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Mesh_cupThea: THREE.Mesh
    Mesh_cupThea_1: THREE.Mesh
    Mesh_cupThea_2: THREE.Mesh
    Mesh_label: THREE.Mesh
    Mesh_label_1: THREE.Mesh
  }
  materials: {
    _defaultMat: THREE.MeshStandardMaterial
    brown: THREE.MeshStandardMaterial
    brownDark: THREE.MeshStandardMaterial
    green: THREE.MeshStandardMaterial
  }
}

export function CupThea({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/models/kenney-foods/cupThea.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh castShadow receiveShadow geometry={nodes.Mesh_cupThea.geometry} material={materials._defaultMat} />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Mesh_cupThea_1.geometry}
        material={nodes.Mesh_cupThea_1.material}
      />
      <mesh castShadow receiveShadow geometry={nodes.Mesh_cupThea_2.geometry} material={materials.brownDark} />
      <group position={[-0.08, 0.1, -0.07]} rotation={[0.15, 0.52, -0.07]}>
        <mesh castShadow receiveShadow geometry={nodes.Mesh_label.geometry} material={materials.green} />
        <mesh castShadow receiveShadow geometry={nodes.Mesh_label_1.geometry} material={nodes.Mesh_label_1.material} />
      </group>
    </group>
  )
}

useGLTF.preload('/models/kenney-foods/cupThea.glb')
