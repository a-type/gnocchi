/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Mesh_plateSauerkraut: THREE.Mesh
    Mesh_plateSauerkraut_1: THREE.Mesh
    Mesh_plateSauerkraut_2: THREE.Mesh
    sausage: THREE.Mesh
  }
  materials: {
    _defaultMat: THREE.MeshStandardMaterial
    brownLight: THREE.MeshStandardMaterial
    brownDark: THREE.MeshStandardMaterial
  }
}

export function PlateSauerkraut({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/models/kenney-foods/plateSauerkraut.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh castShadow receiveShadow geometry={nodes.Mesh_plateSauerkraut.geometry} material={materials._defaultMat} />
      <mesh castShadow receiveShadow geometry={nodes.Mesh_plateSauerkraut_1.geometry} material={materials.brownLight} />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Mesh_plateSauerkraut_2.geometry}
        material={nodes.Mesh_plateSauerkraut_2.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.sausage.geometry}
        material={nodes.sausage.material}
        position={[-0.24, 0.08, 0]}
        rotation={[0, 0, -0.26]}
        scale={1.12}
      />
    </group>
  )
}

useGLTF.preload('/models/kenney-foods/plateSauerkraut.glb')
