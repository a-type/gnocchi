/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Mesh_styrofoamDinner: THREE.Mesh
    Mesh_styrofoamDinner_1: THREE.Mesh
    Mesh_styrofoamDinner_2: THREE.Mesh
    Mesh_styrofoamDinner_3: THREE.Mesh
    Mesh_styrofoamDinner_4: THREE.Mesh
    lid: THREE.Mesh
  }
  materials: {
    brownLight: THREE.MeshStandardMaterial
    brownDark: THREE.MeshStandardMaterial
    green: THREE.MeshStandardMaterial
    _defaultMat: THREE.MeshStandardMaterial
    greenDark: THREE.MeshStandardMaterial
  }
}

export function StyrofoamDinner({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/models/kenney-foods/styrofoamDinner.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh castShadow receiveShadow geometry={nodes.Mesh_styrofoamDinner.geometry} material={materials.brownLight} />
      <mesh castShadow receiveShadow geometry={nodes.Mesh_styrofoamDinner_1.geometry} material={materials.brownDark} />
      <mesh castShadow receiveShadow geometry={nodes.Mesh_styrofoamDinner_2.geometry} material={materials.green} />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Mesh_styrofoamDinner_3.geometry}
        material={nodes.Mesh_styrofoamDinner_3.material}
      />
      <mesh castShadow receiveShadow geometry={nodes.Mesh_styrofoamDinner_4.geometry} material={materials.greenDark} />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.lid.geometry}
        material={nodes.lid.material}
        position={[0.38, 0.16, 0]}
        rotation={[0, 0, Math.PI / 3]}
        scale={1.27}
      />
    </group>
  )
}

useGLTF.preload('/models/kenney-foods/styrofoamDinner.glb')
