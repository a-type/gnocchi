// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Profile {
  id           String           @id @default(cuid())
  fullName     String           @map("full_name")
  friendlyName String           @map("friendly_name")
  email        String           @unique
  imageUrl     String?
  createdAt    DateTime         @default(now()) @map("created_at")
  updatedAt    DateTime         @updatedAt @map("updated_at")
  planId       String           @map("plan_id")
  plan         Plan             @relation(fields: [planId], references: [id])
  invitations  PlanInvitation[]
  accounts     Account[]

  @@map("profiles")
}

model Account {
  id                String   @id @default(cuid())
  provider          String
  providerAccountId String   @map("provider_account_id")
  type              String
  accessToken       String?  @map("access_token")
  refreshToken      String?  @map("refresh_token")
  tokenType         String?  @map("token_type")
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")
  profileId         String   @map("profile_id")
  profile           Profile  @relation(fields: [profileId], references: [id])

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Plan {
  id                      String           @id @default(cuid())
  createdAt               DateTime         @default(now()) @map("created_at")
  updatedAt               DateTime         @updatedAt @map("updated_at")
  deletedAt               DateTime?        @map("deleted_at")
  stripeCustomerId        String?          @map("stripe_customer_id")
  stripeSubscriptionId    String?          @map("stripe_subscription_id")
  subscriptionExpiresAt   DateTime?        @map("subscription_expires_at")
  subscriptionCancelledAt DateTime?        @map("subscription_cancelled_at")
  members                 Profile[]
  invitations             PlanInvitation[]

  documents Document[]

  @@unique([stripeSubscriptionId])
  @@map("plans")
}

model PlanInvitation {
  id          String    @id @default(cuid())
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  expiresAt   DateTime  @map("expires_at")
  claimedAt   DateTime? @map("claimed_at")
  inviterName String    @map("inviter_name")
  inviterId   String    @map("inviter_id")
  inviter     Profile   @relation(fields: [inviterId], references: [id])
  planId      String    @map("plan_id")
  plan        Plan      @relation(fields: [planId], references: [id])

  @@map("plan_invitations")
}

model Document {
  id          String   @id
  firstSeenAt DateTime @default(now()) @map("first_seen_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  // TODO: support JSON field type
  // https://github.com/prisma/prisma/issues/3786
  collection  String
  contents    String

  planId String @map("plan_id")
  plan   Plan   @relation(fields: [planId], references: [id])

  @@index([collection, id])
  @@map("documents")
}
